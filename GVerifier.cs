using System;
using DNA.Security;

namespace DNA 
{
	public class GVerifier 
	{
		private static byte[] Key = new byte[] 
		{ 
			0xDF, 0x0B, 0x64, 0xD5, 0x4A, 0xC7, 0x40, 0x49, 0x6D, 0xAD, 0x88, 0x15, 0x10, 0xEA, 
			0xF3, 0x21, 0xEA, 0xEF, 0x7E, 0x8C, 0xE8, 0xBA, 0x48, 0x99, 0x86, 0x06, 0x5B, 0xC4, 
			0x75, 0x26, 0x8E, 0x0D
		};

		private byte[][] checkStr = new byte[][] 
		{
			new byte[]
			{
				0x50, 0x30, 0x64, 0x23, 0xD9, 0xA6, 0x05, byte.MaxValue, 0x9c, 0x2B, 0xB7, 0x31, 
				0x53, 0xC9, 0xE2, 0x79
			},
			
			new byte[]
			{
				0xBE, 0x14, 0x7A, 0x3C, 0xC4, 0x79, 0xA1, 0xA7, 0x15, 0xF3, 0x8A, 0x50, 0xF0, 
				0x4C, 0xA9, 0x8E
			}
		};

		public bool Verify(string data) 
		{
			for (int i = 0; i < this.checkStr.Length; i++) 
			{
				string decrypted = SecurityTools.DecryptString(GVerifier.Key, this.checkStr[i]);
				
				if (data == decrypted) 
				{
					return false;
				}
			}
			
			return true;
		}
	}
}
